name: Deploy DEV

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to deploy
        required: false
        default: main

concurrency: deploy-dev

env:
  DOCKER_BUILDKIT: '1'

defaults:
  run:
    shell: bash

jobs:
  deploy_dev:
    name: 04-deploy-dev.sh
    if: github.ref == 'refs/heads/main'
    permissions:
      packages: read
      id-token: write
      contents: write
    runs-on: 'ubuntu-24.04'
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Send build status "in progress"
        uses: ./.github/actions/build_status
        with:
          task: deploy-dev
          status: inProgress
          api_key: ${{ secrets.RADIATOR_AUTH_TOKEN }}

      - name: Checkout all branches and tags with full history
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
      - name: Configure dev AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ secrets.AWS_AOE_DEV_ROLE_ARN }}
          role-session-name: aoe-runner-deploy-dev
          aws-region: eu-west-1

      - name: Run CDK Deploy
        run: ./deploy-scripts/04-deploy-dev.sh deploy

      - name: Tag deploy 
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag --force green-dev
          git push --force origin green-dev

  deployment_status_completed:
    name: Send deployment status
    needs: [deploy_dev]
    if: ${{ always() && github.ref == 'refs/heads/main' }}
    continue-on-error: true
    runs-on: 'ubuntu-24.04'
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: ./.github/actions/build_status
        with:
          task: deploy-dev
          status: ${{ needs.deploy_dev.result == 'success' && 'success' || 'failure' }}
          api_key: ${{ secrets.RADIATOR_AUTH_TOKEN }}
