variables:
  DOCKER_HOST: unix:///var/run/docker.sock # tcp://docker:2375
  DOCKER_DRIVER: overlay2
  # DOCKER_TLS_CERTDIR: '/certs'
  # DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
  # DOCKER_TLS_VERIFY: 1

image: docker:24.0.6

stages:
  - test
  - build
  - deploy
  - cleanup

test_test:
  stage: test
  image: node:18.18.2
  script:
    - npm ci
    - npm run test
  cache:
    paths:
      - node_modules/
  only:
    - test
  tags:
    - test-apps

build_test:
  stage: build
  script:
    - echo "TEST build"
    - docker login -u $AOE_DOCKER_USER -p $AOE_DOCKER_PASS $AOE_DOCKER_REGISTRY
    - docker compose -f docker-compose.prod.yml build
  only:
    - test
  tags:
    - test-apps

deploy_test:
  stage: deploy
  script:
    - echo "TEST deploy"
    - docker compose -f docker-compose.prod.yml up -d
  only:
    - test
  tags:
    - test-apps

cleanup_test:
  stage: cleanup
  script:
    - echo "TEST system clean up"
    - docker system prune -a -f --volumes
  only:
    - test
  tags:
    - test-apps

test_prod:
  stage: test
  image: node:18.18.2
  script:
    - npm ci
    - npm run test
  cache:
    paths:
      - node_modules/
  only:
    - main
  tags:
    - prod

build_prod:
  stage: build
  script:
    - echo "PROD build"
    - docker login -u $AOE_DOCKER_USER -p $AOE_DOCKER_PASS $AOE_DOCKER_REGISTRY
    - docker compose -f docker-compose.prod2.yml build
  only:
    - main
  tags:
    - prod

deploy_prod:
  stage: deploy
  script:
    - echo "PROD deploy"
    - docker compose -f docker-compose.prod2.yml up -d
  only:
    - main
  tags:
    - prod

cleanup_prod:
  stage: cleanup
  script:
    - echo "PROD system clean up"
    - docker system prune -a -f --volumes
  only:
    - main
  tags:
    - prod
